# File: example_codim.yml
# Author: Ryoichi Ando (ryoichi.ando@zozo.com)
# License: Apache v2.0

name: codim.ipynb

on:
  workflow_dispatch:
    inputs:
      runner:
        type: string
        required: true
        description: 'Runner Name'

env:
  VAST_API_KEY: ${{ secrets.VAST_API_KEY }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  EXAMPLE_NAME: codim
  HELPER_PATH: .github/workflows/vast/helper.sh
  
jobs:
  run:
    runs-on: ${{ github.event.inputs.runner }}
    steps:

      - name: check out repo
        uses: actions/checkout@v3

      - name: print scene
        run: |
          echo "Scene: $EXAMPLE_NAME" >> $GITHUB_STEP_SUMMARY

      - name: prepare
        timeout-minutes: 30
        run: bash $HELPER_PATH create $VAST_API_KEY

      - name: 1st run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 1st

      - name: 2nd run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 2nd

      - name: 3rd run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 3rd

      - name: 4th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 4th

      - name: 5th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 5th

      - name: 6th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 6th

      - name: 7th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 7th

      - name: 8th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 8th

      - name: 9th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 9th

      - name: 10th run
        timeout-minutes: 40
        run: bash $HELPER_PATH run ${EXAMPLE_NAME}.py 10th

      - name: collect
        if: success() || failure()
        run: bash $HELPER_PATH collect

      - name: upload artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-codim
          path: ci
          retention-days: 30

      - name: shutdown
        if: always()
        run: bash $HELPER_PATH delete
    
  notify_failure:
    runs-on: ubuntu-latest
    needs: run
    if: ${{ failure() }}
    steps:

      - name: Slack Notification Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Deploy / Failure
          SLACK_COLOR: danger
          SLACK_MESSAGE: One or more tests failed.
